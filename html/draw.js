

// Class for managing the deck
class DeckModel
{
    constructor()
    {
        var suits = ["spade","heart","club","diamond"];
        var faceValues = ["ace","2","3","4","5","6","7","8","9","10","jack","queen","king"];
        
        // Build a sorted deck array that can always be used as reference
        this._deck = [];
        for (var s = 0; s < suits.length; s++)
        {
            for (var v = 0; v < faceValues.length; v++)
            {
                var newCard = new CardModel(suits[s],faceValues[v]);
                this._deck.push(newCard);
            }
        }
        
        // Build a shuffled deck object based on the unshuffled deck
        this.shuffledDeck = this._deck;
        
        
        // Image for the back of the cards
        this.img = new Image(512,512);
        this.img.src = "img/suits.png";
        
    }
    // For shuffling the deck
    shuffle()
    {
        /*
         This is from:
         https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array
         Modifed slightly to accomodate my needs
         */
        let currentIndex = this.shuffledDeck.length,  randomIndex;
        
        // While there remain elements to shuffle...
        while (currentIndex != 0) {
            // Pick a remaining element...
            randomIndex = Math.floor(Math.random() * currentIndex);
            currentIndex--;
            
            // And swap it with the current element.
            [this.shuffledDeck[currentIndex], this.shuffledDeck[randomIndex]] = [this.shuffledDeck[randomIndex], this.shuffledDeck[currentIndex]];
        }
        
        return true;  // Just to return something
    }
}

// Class for managing the types of cards
class OldCardModel
{
    constructor(suit,faceValue)
    {
        this._suit = suit;
        this._value = faceValue;
        this.img = new Image(512,512);
        this.img.src = "img/card-" + faceValue + "-" + suit + "s.png";
    }
    // Return an id that can be used for object
    get id() { return (this._suit + this._value); }
    // Return the suit of the card
    get suit() { return this._suit; }
    // Return the face value of the card
    get faceValue() { return this._value; }
    // Check if this card is the seven of spades
    isSevenSpades() {
        if ( this._suit == "spade" && this._value == "7" ) { return true; }
        else { return false; }
    }
}










class CardModel
{
    constructor(suit,faceValue)
    {
        var suits = ["spade","heart","club","diamond","red","black"];
        var values = ["1","2","3","4","5","6","7","8","9","10","11","12","13","14"];
        this._suit = suit;
        // Should set the _value property
        this.faceValue = faceValue;
        
        
        // Red and black are for the joker
        // Joker is number 14
        // 1 => Ace, 11 => Jack, 12 => Queen, 13 => King
        
        // Need to determine the colour of the card from suit
        
        
        // Need to go through all of the points on the joker to find out where the ending point is so that it can be filled in properly
        
        
        
        
        
    }
    get id() { return this._suit + this._value; }
    get faceValue()
    {
        if ( this._value == "1" ) { return "ace"; }
        else if ( this._value == "11" ) { return "jack"; }
        else if ( this._value == "12" ) { return "queen"; }
        else if ( this._value == "13" ) { return "king"; }
        else if ( this._value == "14" ) { return "joker"; }
        else { return this._value; }
    }
    set faceValue(faceValue)
    {
        if ( faceValue.toLowerCase() == "ace" ) { this._value = "1"; }
        else if ( faceValue.toLowerCase() == "jack" ) { this._value = "11"; }
        else if ( faceValue.toLowerCase() == "queen" ) { this._value = "12"; }
        else if ( faceValue.toLowerCase() == "king" ) { this._value = "13"; }
        else if ( faceValue.toLowerCase() == "joker" ) { this._value = "14"; }
        else { this._value = "" + faceValue; }
    }
    draw(ctx,startX,startY,width,height)
    {
        // Width and height need to stay within the limits, so maybe they should be optional?
        // Need to have a way of specifying the physical limits, not just calculate a percentage before this
        
        // Adjustment amount taken away from the outer perimeter
        // 90.236, 36
        
        // Outer dimensions from outerCardPerimeter
        // 333.696, 439.998
        
        
        
        this.outerCardPerimeter(ctx,startX,startY,1.0);
        
        this.clubDraw(ctx,startX,startY,1.0);
        
        
        
        
        
    }
    outerCardPerimeter(ctx,offsetX,offsetY,multiplier)
    {
        // Outer card shape dimensions
        ctx.beginPath();
        ctx.moveTo(offsetX + 29.200000 * multiplier,offsetY + 0.000000 * multiplier);
        ctx.bezierCurveTo(offsetX + 13.074000 * multiplier, offsetY + 0.000000 * multiplier, offsetX + 0.000000 * multiplier, offsetY + 17.237000 * multiplier, offsetX + 0.000000 * multiplier, offsetY + 38.500000 * multiplier);
        ctx.lineTo(offsetX + 0.000000 * multiplier, offsetY + 401.498000 * multiplier);
        ctx.bezierCurveTo(offsetX + 0.000000 * multiplier, offsetY + 422.761000 * multiplier, offsetX + 13.074000 * multiplier, offsetY + 439.998000 * multiplier, offsetX + 29.200000 * multiplier, offsetY + 439.998000 * multiplier);
        ctx.lineTo(offsetX + 304.498000 * multiplier, offsetY + 439.998000 * multiplier);
        ctx.bezierCurveTo(offsetX + 320.624000 * multiplier, offsetY + 439.998000 * multiplier, offsetX + 333.696000 * multiplier, offsetY + 422.761000 * multiplier, offsetX + 333.696000 * multiplier, offsetY + 401.498000 * multiplier);
        ctx.lineTo(offsetX + 333.696000 * multiplier, offsetY + 38.500000 * multiplier);
        ctx.bezierCurveTo(offsetX + 333.696000 * multiplier, offsetY + 17.237000 * multiplier, offsetX + 320.624000 * multiplier, offsetY + 0.000000 * multiplier, offsetX + 304.498000 * multiplier, offsetY + 0.000000 * multiplier);
        ctx.lineTo(offsetX + 29.200000 * multiplier, offsetY + 0.000000 * multiplier);
        ctx.closePath();
        ctx.stroke();
    }
    
    clubDraw(ctx,offsetX,offsetY,multiplier)
    {
        // club top
        ctx.beginPath();
        ctx.moveTo(146.268000, 44.408000);
        ctx.lineTo(146.283000, 44.408000);
        ctx.bezierCurveTo(159.870000, 44.418000, 170.725000, 55.263000, 170.725000, 68.852000);
        ctx.bezierCurveTo(170.725000, 74.562000, 168.722000, 79.849000, 165.459000, 84.025000);
        ctx.bezierCurveTo(166.579000, 83.867000, 167.691000, 83.713000, 168.855000, 83.713000);
        ctx.bezierCurveTo(182.450000, 83.713000, 193.313000, 94.873000, 193.313000, 108.467000);
        ctx.bezierCurveTo(193.313000, 122.061000, 182.450000, 133.217000, 168.855000, 133.217000);
        ctx.bezierCurveTo(163.095000, 133.217000, 157.775000, 131.171000, 153.561000, 127.797000);
        ctx.lineTo(166.170000, 157.988000);
        ctx.lineTo(126.053000, 157.988000);
        ctx.lineTo(138.473000, 128.246000);
        ctx.bezierCurveTo(134.353000, 131.361000, 129.240000, 133.216000, 123.697000, 133.216000);
        ctx.bezierCurveTo(110.103000, 133.216000, 98.945000, 122.057000, 98.945000, 108.463000);
        ctx.bezierCurveTo(98.945000, 94.868000, 110.103000, 83.713000, 123.697000, 83.713000);
        ctx.bezierCurveTo(124.756000, 83.713000, 125.755000, 83.897000, 126.779000, 84.025000);
        ctx.bezierCurveTo(123.564000, 79.865000, 121.531000, 74.516000, 121.531000, 68.852000);
        ctx.bezierCurveTo(121.531000, 55.263000, 132.681000, 44.418000, 146.268000, 44.408000);
        ctx.closePath();
        
        // Club bottom
        ctx.beginPath();
        ctx.moveTo(345.795000, 354.012000);
        ctx.lineTo(385.912000, 354.012000);
        ctx.lineTo(373.301000, 384.205000);
        ctx.bezierCurveTo(377.516000, 380.831000, 382.836000, 378.783000, 388.596000, 378.783000);
        ctx.bezierCurveTo(402.190000, 378.783000, 413.055000, 389.941000, 413.055000, 403.535000);
        ctx.bezierCurveTo(413.055000, 417.130000, 402.190000, 428.287000, 388.595000, 428.287000);
        ctx.bezierCurveTo(387.432000, 428.287000, 386.320000, 428.135000, 385.199000, 427.977000);
        ctx.bezierCurveTo(388.462000, 432.153000, 390.465000, 437.439000, 390.465000, 443.150000);
        ctx.bezierCurveTo(390.465000, 456.739000, 379.612000, 467.583000, 366.025000, 467.592000);
        ctx.lineTo(366.008000, 467.592000);
        ctx.bezierCurveTo(352.420000, 467.582000, 341.273000, 456.739000, 341.273000, 443.150000);
        ctx.bezierCurveTo(341.273000, 437.485000, 343.306000, 432.137000, 346.521000, 427.977000);
        ctx.bezierCurveTo(345.498000, 428.105000, 344.496000, 428.289000, 343.437000, 428.289000);
        ctx.bezierCurveTo(329.843000, 428.289000, 318.686000, 417.130000, 318.686000, 403.535000);
        ctx.bezierCurveTo(318.686000, 389.941000, 329.843000, 378.783000, 343.438000, 378.783000);
        ctx.bezierCurveTo(348.980000, 378.783000, 354.093000, 380.641000, 358.213000, 383.756000);
        ctx.lineTo(345.795000, 354.012000);
        ctx.closePath();
        ctx.stroke();
        
        
        /*
        
        // club top
        ctx.beginPath();
        ctx.moveTo(146.268000, 44.408000);
        ctx.lineTo(146.283000, 44.408000);
        ctx.bezierCurveTo(159.870000, 44.418000, 170.725000, 55.263000, 170.725000, 68.852000);
        ctx.bezierCurveTo(170.725000, 74.562000, 168.722000, 79.849000, 165.459000, 84.025000);
        ctx.bezierCurveTo(166.579000, 83.867000, 167.691000, 83.713000, 168.855000, 83.713000);
        ctx.bezierCurveTo(182.450000, 83.713000, 193.313000, 94.873000, 193.313000, 108.467000);
        ctx.bezierCurveTo(193.313000, 122.061000, 182.450000, 133.217000, 168.855000, 133.217000);
        ctx.bezierCurveTo(163.095000, 133.217000, 157.775000, 131.171000, 153.561000, 127.797000);
        ctx.lineTo(166.170000, 157.988000);
        ctx.lineTo(126.053000, 157.988000);
        ctx.lineTo(138.473000, 128.246000);
        ctx.bezierCurveTo(134.353000, 131.361000, 129.240000, 133.216000, 123.697000, 133.216000);
        ctx.bezierCurveTo(110.103000, 133.216000, 98.945000, 122.057000, 98.945000, 108.463000);
        ctx.bezierCurveTo(98.945000, 94.868000, 110.103000, 83.713000, 123.697000, 83.713000);
        ctx.bezierCurveTo(124.756000, 83.713000, 125.755000, 83.897000, 126.779000, 84.025000);
        ctx.bezierCurveTo(123.564000, 79.865000, 121.531000, 74.516000, 121.531000, 68.852000);
        ctx.bezierCurveTo(121.531000, 55.263000, 132.681000, 44.418000, 146.268000, 44.408000);
        ctx.closePath();
        
        // Club bottom
        ctx.beginPath();
        ctx.moveTo(345.795000, 354.012000);
        ctx.lineTo(385.912000, 354.012000);
        ctx.lineTo(373.301000, 384.205000);
        ctx.bezierCurveTo(377.516000, 380.831000, 382.836000, 378.783000, 388.596000, 378.783000);
        ctx.bezierCurveTo(402.190000, 378.783000, 413.055000, 389.941000, 413.055000, 403.535000);
        ctx.bezierCurveTo(413.055000, 417.130000, 402.190000, 428.287000, 388.595000, 428.287000);
        ctx.bezierCurveTo(387.432000, 428.287000, 386.320000, 428.135000, 385.199000, 427.977000);
        ctx.bezierCurveTo(388.462000, 432.153000, 390.465000, 437.439000, 390.465000, 443.150000);
        ctx.bezierCurveTo(390.465000, 456.739000, 379.612000, 467.583000, 366.025000, 467.592000);
        ctx.lineTo(366.008000, 467.592000);
        ctx.bezierCurveTo(352.420000, 467.582000, 341.273000, 456.739000, 341.273000, 443.150000);
        ctx.bezierCurveTo(341.273000, 437.485000, 343.306000, 432.137000, 346.521000, 427.977000);
        ctx.bezierCurveTo(345.498000, 428.105000, 344.496000, 428.289000, 343.437000, 428.289000);
        ctx.bezierCurveTo(329.843000, 428.289000, 318.686000, 417.130000, 318.686000, 403.535000);
        ctx.bezierCurveTo(318.686000, 389.941000, 329.843000, 378.783000, 343.438000, 378.783000);
        ctx.bezierCurveTo(348.980000, 378.783000, 354.093000, 380.641000, 358.213000, 383.756000);
        ctx.lineTo(345.795000, 354.012000);
        ctx.closePath();
        ctx.stroke();
         */
    }
    
    diamondDraw(ctx)
    {
        // Diamond top
        ctx.beginPath();
        ctx.moveTo(146.320000, 39.717000);
        ctx.lineTo(193.713000, 97.987000);
        ctx.lineTo(146.320000, 156.273000);
        ctx.lineTo(98.945000, 97.986000);
        ctx.lineTo(146.320000, 39.716000);
        ctx.closePath();
        ctx.stroke();

        // Diamond bottom
        ctx.beginPath();
        ctx.moveTo(365.662000, 352.523000);
        ctx.lineTo(413.055000, 410.793000);
        ctx.lineTo(365.662000, 469.080000);
        ctx.lineTo(318.287000, 410.793000);
        ctx.lineTo(365.662000, 352.523000);
        ctx.closePath();
        ctx.stroke();
    }
    
    heartDraw(ctx)
    {
        // Heart top
        ctx.beginPath();
        ctx.moveTo(176.650000, 52.174000);
        ctx.bezierCurveTo(190.263000, 51.855000, 203.154000, 62.028000, 203.725000, 80.217000);
        ctx.bezierCurveTo(204.701000, 111.307000, 155.985000, 133.162000, 151.412000, 150.232000);
        ctx.bezierCurveTo(146.415000, 131.583000, 99.999000, 112.659000, 98.962000, 80.217000);
        ctx.bezierCurveTo(97.968000, 49.062000, 136.366000, 42.310000, 151.414000, 68.371000);
        ctx.bezierCurveTo(157.676000, 57.525000, 167.337000, 52.393000, 176.650000, 52.176000);
        ctx.closePath();
        ctx.stroke();

        // Heart bottom
        ctx.beginPath();
        ctx.moveTo(360.728000, 361.770000);
        ctx.bezierCurveTo(365.300000, 378.840000, 414.015000, 400.695000, 413.038000, 431.785000);
        ctx.bezierCurveTo(412.468000, 449.974000, 399.576000, 460.147000, 385.964000, 459.828000);
        ctx.lineTo(385.964000, 459.826000);
        ctx.bezierCurveTo(376.650000, 459.609000, 366.989000, 454.477000, 360.728000, 443.631000);
        ctx.bezierCurveTo(345.680000, 469.692000, 307.282000, 462.941000, 308.276000, 431.785000);
        ctx.bezierCurveTo(309.313000, 399.343000, 355.730000, 380.419000, 360.728000, 361.769000);
        ctx.closePath();
        ctx.stroke();
    }
    
    spadeDraw(ctx)
    {
        // Spade top
        ctx.beginPath();
        ctx.moveTo(146.090000, 44.045000);
        ctx.bezierCurveTo(146.090000, 44.045000, 192.428000, 77.885000, 193.361000, 107.115000);
        ctx.bezierCurveTo(194.137000, 131.402000, 168.335000, 139.235000, 152.584000, 125.699000);
        ctx.lineTo(166.217000, 158.352000);
        ctx.lineTo(126.102000, 158.352000);
        ctx.lineTo(139.715000, 125.719000);
        ctx.bezierCurveTo(124.180000, 139.599000, 99.709000, 131.066000, 98.957000, 107.113000);
        ctx.bezierCurveTo(98.077000, 79.103000, 146.090000, 44.047000, 146.090000, 44.047000);
        ctx.lineTo(146.090000, 44.045000);
        ctx.closePath();
        ctx.stroke();

        // Spade bottom
        ctx.beginPath();
        ctx.moveTo(345.780000, 353.648000);
        ctx.lineTo(385.896000, 353.648000);
        ctx.lineTo(372.263000, 386.301000);
        ctx.bezierCurveTo(388.013000, 372.765000, 413.814000, 380.600000, 413.038000, 404.887000);
        ctx.bezierCurveTo(412.105000, 434.117000, 365.767000, 467.955000, 365.767000, 467.955000);
        ctx.bezierCurveTo(365.767000, 467.955000, 317.757000, 432.896000, 318.636000, 404.887000);
        ctx.bezierCurveTo(319.387000, 380.934000, 343.858000, 372.402000, 359.394000, 386.283000);
        ctx.lineTo(345.780000, 353.648000);
        ctx.closePath();
        ctx.stroke();
    }
    
    starDraw(ctx)
    {
        // Star top
        ctx.beginPath();
        ctx.moveTo(145.805000, 46.951000);
        ctx.lineTo(156.807000, 79.807000);
        ctx.lineTo(191.455000, 80.119000);
        ctx.lineTo(163.607000, 100.736000);
        ctx.lineTo(174.017000, 133.786000);
        ctx.lineTo(145.805000, 113.672000);
        ctx.lineTo(117.590000, 133.785000);
        ctx.lineTo(128.000000, 100.736000);
        ctx.lineTo(100.152000, 80.120000);
        ctx.lineTo(134.801000, 79.808000);
        ctx.closePath();
        ctx.stroke();

        // Star bottom
        ctx.beginPath();
        ctx.moveTo(337.982000, 378.215000);
        ctx.lineTo(366.195000, 398.328000);
        ctx.lineTo(394.410000, 378.215000);
        ctx.lineTo(384.000000, 411.264000);
        ctx.lineTo(411.848000, 431.881000);
        ctx.lineTo(377.199000, 432.193000);
        ctx.lineTo(366.195000, 465.049000);
        ctx.lineTo(355.193000, 432.193000);
        ctx.lineTo(320.545000, 431.881000);
        ctx.lineTo(348.393000, 411.264000);
        ctx.closePath();
        ctx.stroke();

    }
    
    jokerDraw(ctx)
    {
        // Joker
        ctx.beginPath();
        ctx.moveTo(363.979000, 161.840000);
        ctx.bezierCurveTo(371.106000, 171.299000, 376.718000, 182.529000, 380.811000, 193.880000);
        ctx.bezierCurveTo(384.611000, 204.424000, 387.008000, 215.091000, 387.479000, 224.900000);
        ctx.bezierCurveTo(387.316000, 243.915000, 383.564000, 248.174000, 372.922000, 261.834000);
        ctx.lineTo(366.219000, 250.354000);
        ctx.bezierCurveTo(355.369000, 237.248000, 335.440000, 201.954000, 318.836000, 206.682000);
        ctx.bezierCurveTo(312.315000, 212.792000, 309.840000, 220.052000, 308.523000, 227.484000);
        ctx.bezierCurveTo(311.421000, 236.284000, 313.000000, 245.914000, 313.000000, 256.000000);
        ctx.bezierCurveTo(313.000000, 271.293000, 309.385000, 285.540000, 303.004000, 297.416000);
        ctx.bezierCurveTo(325.647000, 301.953000, 360.931000, 316.748000, 360.977000, 336.639000);
        ctx.bezierCurveTo(360.707000, 340.422000, 359.142000, 344.319000, 356.615000, 347.059000);
        ctx.bezierCurveTo(345.872000, 359.587000, 319.657000, 351.184000, 311.415000, 357.131000);
        ctx.bezierCurveTo(312.211000, 364.078000, 315.527000, 371.249000, 315.770000, 377.305000);
        ctx.bezierCurveTo(315.906000, 381.665000, 314.002000, 387.885000, 309.262000, 391.301000);
        ctx.bezierCurveTo(303.592000, 395.388000, 296.294000, 395.852000, 290.742000, 394.346000);
        ctx.bezierCurveTo(279.940000, 392.226000, 272.000000, 379.649000, 256.000000, 377.000000);
        ctx.bezierCurveTo(242.456000, 380.491000, 233.588000, 390.870000, 221.258000, 394.346000);
        ctx.bezierCurveTo(215.706000, 395.852000, 208.408000, 395.388000, 202.738000, 391.301000);
        ctx.bezierCurveTo(197.998000, 387.884000, 196.094000, 381.665000, 196.230000, 377.305000);
        ctx.bezierCurveTo(196.172000, 370.163000, 200.337000, 363.511000, 200.586000, 357.131000);
        ctx.bezierCurveTo(184.845000, 349.343000, 166.770000, 359.101000, 155.385000, 347.059000);
        ctx.bezierCurveTo(152.858000, 344.319000, 151.292000, 340.422000, 151.023000, 336.639000);
        ctx.bezierCurveTo(157.169000, 309.298000, 186.397000, 301.955000, 208.996000, 297.416000);
        ctx.bezierCurveTo(202.615000, 285.540000, 199.000000, 271.293000, 199.000000, 256.000000);
        ctx.bezierCurveTo(199.000000, 244.511000, 201.047000, 233.615000, 204.764000, 223.865000);
        ctx.bezierCurveTo(202.407000, 215.942000, 201.323000, 207.877000, 195.326000, 201.424000);
        ctx.bezierCurveTo(186.568000, 200.499000, 181.247000, 208.321000, 177.484000, 214.054000);
        ctx.bezierCurveTo(165.801000, 233.554000, 158.766000, 244.660000, 144.604000, 260.246000);
        ctx.bezierCurveTo(128.000000, 236.846000, 125.290000, 210.956000, 131.447000, 189.258000);
        ctx.bezierCurveTo(137.512000, 168.927000, 150.617000, 150.460000, 169.373000, 141.334000);
        ctx.bezierCurveTo(190.589000, 131.568000, 209.245000, 131.304000, 228.258000, 141.537000);
        ctx.bezierCurveTo(233.421000, 128.484000, 238.658000, 115.887000, 246.293000, 105.328000);
        ctx.bezierCurveTo(255.918000, 92.018000, 270.093000, 79.697000, 290.000000, 80.033000);
        ctx.bezierCurveTo(328.800000, 80.689000, 363.993000, 131.189000, 363.979000, 161.840000);
        ctx.moveTo(291.759000, 97.947000);
        ctx.bezierCurveTo(256.000000, 100.356000, 246.988000, 142.693000, 236.570000, 169.237000);
        ctx.lineTo(227.123000, 162.150000);
        ctx.bezierCurveTo(208.695000, 149.840000, 196.047000, 148.418000, 177.248000, 157.520000);
        ctx.bezierCurveTo(164.324000, 163.808000, 153.547000, 178.140000, 148.695000, 194.402000);
        ctx.bezierCurveTo(145.315000, 205.731000, 144.930000, 217.627000, 147.746000, 228.047000);
        ctx.bezierCurveTo(157.196000, 214.498000, 163.552000, 197.967000, 176.063000, 188.869000);
        ctx.bezierCurveTo(183.549000, 180.894000, 202.333000, 180.371000, 211.513000, 192.766000);
        ctx.bezierCurveTo(216.351000, 199.786000, 218.950000, 207.306000, 221.013000, 215.000000);
        ctx.lineTo(293.178000, 215.000000);
        ctx.bezierCurveTo(293.770000, 213.056000, 294.245000, 211.238000, 295.195000, 208.967000);
        ctx.bezierCurveTo(298.151000, 201.903000, 302.960000, 192.701000, 313.590000, 189.463000);
        ctx.bezierCurveTo(331.680000, 185.601000, 346.084000, 196.569000, 357.088000, 207.977000);
        ctx.bezierCurveTo(361.605000, 212.694000, 365.580000, 217.673000, 369.186000, 222.494000);
        ctx.bezierCurveTo(368.496000, 215.696000, 366.709000, 207.843000, 363.876000, 199.986000);
        ctx.bezierCurveTo(350.749000, 163.279000, 325.987000, 148.955000, 293.490000, 167.975000);
        ctx.bezierCurveTo(296.046000, 151.552000, 310.360000, 132.255000, 339.740000, 141.013000);
        ctx.bezierCurveTo(330.646000, 123.878000, 309.385000, 98.542000, 291.760000, 97.947000);
        ctx.moveTo(220.644000, 233.000000);
        ctx.bezierCurveTo(218.334000, 239.965000, 217.001000, 247.753000, 217.001000, 256.000000);
        ctx.bezierCurveTo(217.001000, 271.850000, 221.893000, 286.032000, 229.261000, 295.855000);
        ctx.bezierCurveTo(236.628000, 305.680000, 245.988000, 311.000000, 256.000000, 311.000000);
        ctx.bezierCurveTo(266.012000, 311.000000, 275.372000, 305.680000, 282.740000, 295.855000);
        ctx.bezierCurveTo(290.108000, 286.032000, 295.000000, 271.850000, 295.000000, 256.000000);
        ctx.bezierCurveTo(295.000000, 247.753000, 293.666000, 239.965000, 291.357000, 233.000000);
        ctx.moveTo(232.000000, 280.000000);
        ctx.lineTo(280.000000, 280.000000);
        ctx.bezierCurveTo(280.000000, 280.000000, 272.000000, 294.000000, 256.000000, 294.000000);
        ctx.bezierCurveTo(240.000000, 294.000000, 232.000000, 280.000000, 232.000000, 280.000000);
        ctx.moveTo(220.860000, 313.566000);
        ctx.bezierCurveTo(207.000000, 316.906000, 170.491000, 322.466000, 169.018000, 334.986000);
        ctx.bezierCurveTo(178.639000, 336.933000, 189.464000, 335.824000, 198.016000, 337.221000);
        ctx.bezierCurveTo(204.009000, 338.239000, 210.836000, 340.544000, 215.301000, 346.738000);
        ctx.bezierCurveTo(218.676000, 351.421000, 218.878000, 356.841000, 218.338000, 360.948000);
        ctx.bezierCurveTo(217.795000, 366.838000, 215.021000, 371.505000, 214.363000, 377.268000);
        ctx.bezierCurveTo(230.318000, 374.678000, 242.627000, 359.736000, 256.000000, 359.000000);
        ctx.bezierCurveTo(272.000000, 358.298000, 285.313000, 376.402000, 297.637000, 377.268000);
        ctx.bezierCurveTo(296.744000, 371.678000, 294.375000, 366.110000, 293.662000, 360.948000);
        ctx.bezierCurveTo(293.122000, 356.841000, 293.324000, 351.421000, 296.699000, 346.738000);
        ctx.bezierCurveTo(301.164000, 340.544000, 307.991000, 338.238000, 313.984000, 337.221000);
        ctx.bezierCurveTo(323.726000, 334.992000, 333.959000, 337.617000, 342.982000, 334.986000);
        ctx.bezierCurveTo(337.212000, 321.861000, 303.169000, 315.532000, 291.141000, 313.566000);
        ctx.bezierCurveTo(281.665000, 323.010000, 269.450000, 329.000000, 256.000000, 329.000000);
        ctx.bezierCurveTo(242.548000, 329.000000, 230.335000, 323.009000, 220.860000, 313.566000);
        ctx.closePath();
        ctx.stroke();
    }
    
    twoDraw(ctx)
    {
        // 2
        ctx.beginPath();
        ctx.moveTo(245.778000, 176.533000);
        ctx.bezierCurveTo(255.366000, 176.533000, 264.242000, 178.593000, 272.404000, 182.715000);
        ctx.bezierCurveTo(280.646000, 186.835000, 286.828000, 192.264000, 290.949000, 199.000000);
        ctx.bezierCurveTo(295.070000, 205.657000, 297.129000, 212.948000, 297.129000, 220.873000);
        ctx.bezierCurveTo(297.129000, 226.341000, 296.099000, 231.889000, 294.039000, 237.516000);
        ctx.bezierCurveTo(291.979000, 243.142000, 288.966000, 248.411000, 285.004000, 253.324000);
        ctx.bezierCurveTo(278.188000, 261.804000, 271.176000, 269.055000, 263.964000, 275.078000);
        ctx.lineTo(232.582000, 301.468000);
        ctx.bezierCurveTo(224.657000, 308.126000, 218.872000, 313.791000, 215.227000, 318.467000);
        ctx.bezierCurveTo(211.581000, 323.142000, 229.571000, 325.480000, 269.195000, 325.480000);
        ctx.bezierCurveTo(275.139000, 325.480000, 279.378000, 323.934000, 281.915000, 320.844000);
        ctx.bezierCurveTo(284.450000, 317.754000, 287.343000, 309.194000, 290.592000, 295.168000);
        ctx.lineTo(298.676000, 295.168000);
        ctx.lineTo(294.870000, 344.500000);
        ctx.lineTo(188.360000, 344.500000);
        ctx.lineTo(188.360000, 338.080000);
        ctx.lineTo(222.952000, 298.734000);
        ctx.bezierCurveTo(242.209000, 277.813000, 253.780000, 264.658000, 257.663000, 259.270000);
        ctx.bezierCurveTo(263.210000, 251.582000, 267.253000, 244.171000, 269.788000, 237.040000);
        ctx.bezierCurveTo(272.324000, 229.828000, 273.593000, 223.290000, 273.593000, 217.426000);
        ctx.bezierCurveTo(273.593000, 207.678000, 270.898000, 200.030000, 265.509000, 194.482000);
        ctx.bezierCurveTo(260.119000, 188.856000, 252.631000, 186.043000, 243.042000, 186.043000);
        ctx.bezierCurveTo(232.264000, 186.043000, 223.469000, 188.618000, 216.653000, 193.770000);
        ctx.bezierCurveTo(209.838000, 198.920000, 206.429000, 204.389000, 206.429000, 210.174000);
        ctx.bezierCurveTo(206.429000, 212.155000, 206.945000, 213.661000, 207.976000, 214.691000);
        ctx.bezierCurveTo(208.926000, 215.721000, 210.986000, 216.633000, 214.156000, 217.426000);
        ctx.bezierCurveTo(222.159000, 219.328000, 226.163000, 224.004000, 226.163000, 231.453000);
        ctx.bezierCurveTo(226.163000, 235.495000, 224.815000, 238.863000, 222.120000, 241.557000);
        ctx.bezierCurveTo(219.426000, 244.172000, 215.978000, 245.479000, 211.778000, 245.479000);
        ctx.bezierCurveTo(206.944000, 245.479000, 202.705000, 243.260000, 199.060000, 238.822000);
        ctx.bezierCurveTo(195.414000, 234.305000, 193.590000, 228.442000, 193.590000, 221.230000);
        ctx.bezierCurveTo(193.590000, 213.147000, 195.652000, 205.816000, 199.772000, 199.238000);
        ctx.bezierCurveTo(203.972000, 192.581000, 210.272000, 187.153000, 218.672000, 182.953000);
        ctx.bezierCurveTo(227.073000, 178.673000, 236.108000, 176.533000, 245.776000, 176.533000);
        ctx.closePath();
        ctx.stroke();
    }
    
    threeDraw(ctx)
    {
        // 3
        ctx.beginPath();
        ctx.moveTo(245.539000, 176.535000);
        ctx.bezierCurveTo(260.438000, 176.535000, 272.325000, 180.537000, 281.201000, 188.541000);
        ctx.bezierCurveTo(290.077000, 196.545000, 294.516000, 206.450000, 294.516000, 218.258000);
        ctx.bezierCurveTo(294.516000, 226.738000, 292.098000, 234.068000, 287.264000, 240.250000);
        ctx.bezierCurveTo(282.509000, 246.431000, 274.266000, 251.900000, 262.537000, 256.654000);
        ctx.bezierCurveTo(273.870000, 259.428000, 282.707000, 264.024000, 289.047000, 270.444000);
        ctx.bezierCurveTo(297.130000, 278.606000, 301.172000, 288.710000, 301.172000, 300.756000);
        ctx.bezierCurveTo(301.172000, 314.386000, 296.338000, 325.323000, 286.670000, 333.564000);
        ctx.bezierCurveTo(275.654000, 343.074000, 261.309000, 347.828000, 243.637000, 347.828000);
        ctx.bezierCurveTo(233.017000, 347.828000, 223.865000, 346.085000, 216.177000, 342.598000);
        ctx.bezierCurveTo(208.570000, 339.111000, 202.864000, 334.397000, 199.061000, 328.453000);
        ctx.bezierCurveTo(195.257000, 322.510000, 193.355000, 315.813000, 193.355000, 308.363000);
        ctx.bezierCurveTo(193.355000, 302.340000, 194.820000, 297.587000, 197.752000, 294.100000);
        ctx.bezierCurveTo(200.684000, 290.613000, 204.371000, 288.870000, 208.809000, 288.870000);
        ctx.bezierCurveTo(212.850000, 288.870000, 216.098000, 290.216000, 218.555000, 292.910000);
        ctx.bezierCurveTo(221.011000, 295.525000, 222.240000, 299.130000, 222.240000, 303.727000);
        ctx.bezierCurveTo(222.240000, 306.659000, 221.606000, 309.157000, 220.338000, 311.217000);
        ctx.bezierCurveTo(219.070000, 313.198000, 216.852000, 315.059000, 213.682000, 316.803000);
        ctx.bezierCurveTo(210.274000, 318.625000, 208.570000, 320.369000, 208.570000, 322.033000);
        ctx.bezierCurveTo(208.570000, 324.411000, 209.760000, 327.106000, 212.137000, 330.117000);
        ctx.bezierCurveTo(214.593000, 333.049000, 218.158000, 335.427000, 222.834000, 337.250000);
        ctx.bezierCurveTo(227.589000, 338.993000, 233.574000, 339.865000, 240.785000, 339.865000);
        ctx.bezierCurveTo(253.227000, 339.865000, 262.420000, 336.813000, 268.363000, 330.711000);
        ctx.bezierCurveTo(274.386000, 324.530000, 277.396000, 314.663000, 277.396000, 301.111000);
        ctx.bezierCurveTo(277.396000, 286.926000, 274.821000, 276.861000, 269.670000, 270.918000);
        ctx.bezierCurveTo(264.598000, 264.895000, 257.030000, 261.885000, 246.965000, 261.885000);
        ctx.bezierCurveTo(244.270000, 261.885000, 240.903000, 262.202000, 236.861000, 262.835000);
        ctx.bezierCurveTo(233.612000, 263.311000, 231.274000, 263.549000, 229.848000, 263.549000);
        ctx.bezierCurveTo(227.470000, 263.549000, 225.608000, 263.074000, 224.262000, 262.123000);
        ctx.bezierCurveTo(222.994000, 261.093000, 222.359000, 259.824000, 222.359000, 258.318000);
        ctx.bezierCurveTo(222.359000, 256.654000, 222.954000, 255.385000, 224.143000, 254.514000);
        ctx.bezierCurveTo(225.411000, 253.563000, 227.431000, 253.088000, 230.205000, 253.088000);
        ctx.lineTo(236.742000, 253.326000);
        ctx.lineTo(242.449000, 253.563000);
        ctx.bezierCurveTo(252.514000, 253.563000, 260.080000, 250.987000, 265.152000, 245.836000);
        ctx.bezierCurveTo(270.224000, 240.685000, 272.762000, 232.721000, 272.762000, 221.943000);
        ctx.bezierCurveTo(272.762000, 208.709000, 270.344000, 199.319000, 265.510000, 193.771000);
        ctx.bezierCurveTo(260.676000, 188.145000, 253.464000, 185.331000, 243.875000, 185.331000);
        ctx.bezierCurveTo(235.079000, 185.331000, 228.065000, 186.916000, 222.834000, 190.086000);
        ctx.bezierCurveTo(217.604000, 193.256000, 214.988000, 196.188000, 214.988000, 198.883000);
        ctx.bezierCurveTo(214.988000, 200.626000, 216.494000, 202.964000, 219.506000, 205.896000);
        ctx.bezierCurveTo(223.786000, 209.859000, 225.926000, 213.978000, 225.926000, 218.258000);
        ctx.bezierCurveTo(225.926000, 221.507000, 224.736000, 224.242000, 222.359000, 226.461000);
        ctx.bezierCurveTo(219.982000, 228.680000, 216.932000, 229.789000, 213.207000, 229.789000);
        ctx.bezierCurveTo(209.245000, 229.789000, 205.995000, 228.283000, 203.459000, 225.271000);
        ctx.bezierCurveTo(201.002000, 222.261000, 199.773000, 218.061000, 199.773000, 212.671000);
        ctx.bezierCurveTo(199.773000, 204.271000, 202.786000, 196.823000, 208.809000, 190.324000);
        ctx.bezierCurveTo(217.367000, 181.131000, 229.610000, 176.535000, 245.539000, 176.535000);
        ctx.closePath();
        ctx.stroke();
    }
    
    fourDraw(ctx)
    {
        // 4
        ctx.beginPath();
        ctx.moveTo(270.754000, 179.625000);
        ctx.lineTo(278.480000, 179.625000);
        ctx.lineTo(278.480000, 292.078000);
        ctx.lineTo(305.820000, 292.078000);
        ctx.lineTo(305.820000, 302.182000);
        ctx.lineTo(278.480000, 302.182000);
        ctx.lineTo(278.480000, 327.502000);
        ctx.bezierCurveTo(278.480000, 329.721000, 279.352000, 331.504000, 281.096000, 332.852000);
        ctx.bezierCurveTo(283.632000, 334.674000, 286.564000, 335.586000, 289.893000, 335.586000);
        ctx.lineTo(299.996000, 335.586000);
        ctx.lineTo(299.996000, 344.500000);
        ctx.lineTo(234.021000, 344.500000);
        ctx.lineTo(234.021000, 335.586000);
        ctx.lineTo(246.266000, 335.586000);
        ctx.bezierCurveTo(250.386000, 335.586000, 253.399000, 334.714000, 255.301000, 332.971000);
        ctx.bezierCurveTo(257.282000, 331.227000, 258.271000, 328.691000, 258.271000, 325.363000);
        ctx.lineTo(258.271000, 302.182000);
        ctx.lineTo(190.991000, 302.182000);
        ctx.lineTo(190.991000, 290.772000);
        ctx.lineTo(270.754000, 179.625000);
        ctx.moveTo(258.270000, 211.840000);
        ctx.lineTo(200.856000, 292.078000);
        ctx.lineTo(258.270000, 292.078000);
        ctx.lineTo(258.270000, 211.840000);
        ctx.closePath();
        ctx.stroke();
    }
    
    fiveDraw(ctx)
    {
        // 5
        ctx.beginPath();
        ctx.moveTo(210.960000, 176.535000);
        ctx.bezierCurveTo(231.010000, 181.132000, 247.375000, 183.430000, 260.055000, 183.430000);
        ctx.bezierCurveTo(265.998000, 183.430000, 271.586000, 182.875000, 276.816000, 181.766000);
        ctx.bezierCurveTo(282.046000, 180.576000, 285.969000, 179.230000, 288.584000, 177.725000);
        ctx.bezierCurveTo(289.931000, 177.011000, 290.803000, 176.655000, 291.199000, 176.655000);
        ctx.bezierCurveTo(291.992000, 176.655000, 292.389000, 177.249000, 292.389000, 178.437000);
        ctx.bezierCurveTo(292.389000, 181.211000, 290.605000, 184.896000, 287.039000, 189.492000);
        ctx.bezierCurveTo(283.473000, 194.009000, 278.599000, 197.616000, 272.418000, 200.311000);
        ctx.bezierCurveTo(266.316000, 203.005000, 259.264000, 204.351000, 251.260000, 204.351000);
        ctx.bezierCurveTo(241.988000, 204.351000, 230.932000, 202.925000, 218.094000, 200.072000);
        ctx.lineTo(214.170000, 245.482000);
        ctx.bezierCurveTo(220.193000, 242.471000, 225.938000, 240.211000, 231.406000, 238.705000);
        ctx.bezierCurveTo(236.874000, 237.199000, 242.066000, 236.447000, 246.979000, 236.447000);
        ctx.bezierCurveTo(262.511000, 236.447000, 275.548000, 241.598000, 286.088000, 251.900000);
        ctx.bezierCurveTo(296.708000, 262.203000, 302.018000, 274.922000, 302.018000, 290.059000);
        ctx.bezierCurveTo(302.018000, 306.859000, 296.390000, 320.688000, 285.137000, 331.545000);
        ctx.bezierCurveTo(273.884000, 342.402000, 259.303000, 347.830000, 241.393000, 347.830000);
        ctx.bezierCurveTo(227.683000, 347.830000, 216.509000, 343.948000, 207.871000, 336.182000);
        ctx.bezierCurveTo(199.312000, 328.336000, 195.033000, 319.024000, 195.033000, 308.246000);
        ctx.bezierCurveTo(195.033000, 301.748000, 196.380000, 296.755000, 199.074000, 293.268000);
        ctx.bezierCurveTo(201.848000, 289.701000, 205.374000, 287.920000, 209.654000, 287.920000);
        ctx.bezierCurveTo(213.854000, 287.920000, 217.262000, 289.346000, 219.877000, 292.200000);
        ctx.bezierCurveTo(222.571000, 294.973000, 223.918000, 298.618000, 223.918000, 303.135000);
        ctx.bezierCurveTo(223.918000, 306.542000, 223.244000, 309.198000, 221.896000, 311.100000);
        ctx.bezierCurveTo(220.628000, 313.002000, 218.253000, 314.586000, 214.766000, 315.854000);
        ctx.bezierCurveTo(211.279000, 317.201000, 209.536000, 318.747000, 209.536000, 320.490000);
        ctx.bezierCurveTo(209.536000, 323.026000, 210.724000, 325.839000, 213.102000, 328.930000);
        ctx.bezierCurveTo(215.479000, 331.941000, 219.044000, 334.437000, 223.799000, 336.418000);
        ctx.bezierCurveTo(228.633000, 338.320000, 234.141000, 339.271000, 240.322000, 339.271000);
        ctx.bezierCurveTo(252.447000, 339.271000, 261.680000, 335.507000, 268.020000, 327.979000);
        ctx.bezierCurveTo(274.439000, 320.449000, 277.648000, 308.207000, 277.648000, 291.248000);
        ctx.bezierCurveTo(277.648000, 275.795000, 274.281000, 264.501000, 267.545000, 257.369000);
        ctx.bezierCurveTo(260.809000, 250.237000, 252.209000, 246.669000, 241.748000, 246.669000);
        ctx.bezierCurveTo(236.993000, 246.669000, 232.239000, 247.542000, 227.484000, 249.285000);
        ctx.bezierCurveTo(222.729000, 251.029000, 217.974000, 253.644000, 213.219000, 257.131000);
        ctx.bezierCurveTo(212.664000, 262.678000, 211.674000, 266.403000, 210.249000, 268.305000);
        ctx.bezierCurveTo(208.822000, 270.127000, 206.999000, 271.039000, 204.779000, 271.039000);
        ctx.bezierCurveTo(203.194000, 271.039000, 201.928000, 270.484000, 200.977000, 269.375000);
        ctx.bezierCurveTo(200.026000, 268.265000, 199.549000, 266.719000, 199.549000, 264.738000);
        ctx.bezierCurveTo(199.549000, 261.251000, 201.175000, 257.804000, 204.424000, 254.396000);
        ctx.bezierCurveTo(205.374000, 253.366000, 206.047000, 252.456000, 206.444000, 251.664000);
        ctx.lineTo(209.178000, 216.714000);
        ctx.bezierCurveTo(210.288000, 202.926000, 210.882000, 189.532000, 210.961000, 176.535000);
        ctx.closePath();
        ctx.stroke();
    }
    
    sixDraw(ctx)
    {
        // 6
        ctx.beginPath();
        ctx.moveTo(259.816000, 176.535000);
        ctx.bezierCurveTo(271.386000, 176.535000, 281.214000, 179.705000, 289.296000, 186.045000);
        ctx.bezierCurveTo(296.033000, 191.196000, 299.402000, 197.378000, 299.402000, 204.590000);
        ctx.bezierCurveTo(299.402000, 209.424000, 297.896000, 213.386000, 294.885000, 216.477000);
        ctx.bezierCurveTo(291.953000, 219.567000, 288.345000, 221.113000, 284.066000, 221.113000);
        ctx.bezierCurveTo(280.104000, 221.113000, 276.696000, 219.805000, 273.844000, 217.189000);
        ctx.bezierCurveTo(271.070000, 214.574000, 269.684000, 211.484000, 269.684000, 207.918000);
        ctx.bezierCurveTo(269.684000, 205.541000, 270.635000, 202.845000, 272.537000, 199.834000);
        ctx.bezierCurveTo(274.281000, 197.060000, 275.152000, 194.882000, 275.152000, 193.297000);
        ctx.bezierCurveTo(275.152000, 191.077000, 274.082000, 189.255000, 271.942000, 187.828000);
        ctx.bezierCurveTo(269.089000, 186.005000, 265.166000, 185.094000, 260.174000, 185.094000);
        ctx.bezierCurveTo(252.487000, 185.094000, 245.473000, 187.512000, 239.133000, 192.346000);
        ctx.bezierCurveTo(232.793000, 197.180000, 227.405000, 205.501000, 222.967000, 217.309000);
        ctx.bezierCurveTo(218.608000, 229.037000, 216.430000, 242.232000, 216.430000, 256.893000);
        ctx.bezierCurveTo(216.430000, 259.033000, 216.547000, 262.243000, 216.785000, 266.521000);
        ctx.bezierCurveTo(222.967000, 258.280000, 229.465000, 252.377000, 236.281000, 248.811000);
        ctx.bezierCurveTo(243.097000, 245.244000, 250.586000, 243.461000, 258.748000, 243.461000);
        ctx.bezierCurveTo(271.903000, 243.461000, 282.918000, 247.938000, 291.793000, 256.893000);
        ctx.bezierCurveTo(300.748000, 265.768000, 305.227000, 277.022000, 305.227000, 290.653000);
        ctx.bezierCurveTo(305.227000, 307.057000, 299.956000, 320.688000, 289.416000, 331.545000);
        ctx.bezierCurveTo(278.876000, 342.402000, 265.839000, 347.830000, 250.306000, 347.830000);
        ctx.bezierCurveTo(239.370000, 347.830000, 229.623000, 344.937000, 221.064000, 339.152000);
        ctx.bezierCurveTo(212.506000, 333.288000, 205.494000, 324.175000, 200.025000, 311.812000);
        ctx.bezierCurveTo(194.636000, 299.450000, 191.941000, 285.027000, 191.941000, 268.543000);
        ctx.bezierCurveTo(191.941000, 250.713000, 195.269000, 234.545000, 201.926000, 220.043000);
        ctx.bezierCurveTo(208.583000, 205.541000, 217.063000, 194.684000, 227.366000, 187.473000);
        ctx.bezierCurveTo(237.746000, 180.182000, 248.563000, 176.535000, 259.816000, 176.535000);
        ctx.moveTo(252.209000, 255.109000);
        ctx.bezierCurveTo(242.303000, 255.109000, 234.179000, 258.716000, 227.839000, 265.928000);
        ctx.bezierCurveTo(221.579000, 273.060000, 218.449000, 283.124000, 218.449000, 296.121000);
        ctx.bezierCurveTo(218.449000, 310.227000, 221.501000, 321.004000, 227.604000, 328.453000);
        ctx.bezierCurveTo(233.706000, 335.903000, 241.472000, 339.627000, 250.902000, 339.627000);
        ctx.bezierCurveTo(260.254000, 339.627000, 267.782000, 336.102000, 273.488000, 329.049000);
        ctx.bezierCurveTo(279.194000, 321.996000, 282.047000, 311.455000, 282.047000, 297.428000);
        ctx.bezierCurveTo(282.047000, 282.529000, 279.392000, 271.753000, 274.082000, 265.096000);
        ctx.bezierCurveTo(268.852000, 258.439000, 261.560000, 255.109000, 252.209000, 255.109000);
        ctx.closePath();
        ctx.stroke();
    }
    
    sevenDraw(ctx)
    {
        // 7
        ctx.beginPath();
        ctx.moveTo(205.020000, 176.654000);
        ctx.bezierCurveTo(212.786000, 178.636000, 221.184000, 179.625000, 230.219000, 179.625000);
        ctx.lineTo(304.159000, 179.625000);
        ctx.lineTo(304.159000, 185.094000);
        ctx.bezierCurveTo(293.301000, 204.193000, 285.178000, 220.359000, 279.789000, 233.594000);
        ctx.bezierCurveTo(274.400000, 246.749000, 270.319000, 259.349000, 267.545000, 271.394000);
        ctx.bezierCurveTo(264.771000, 283.440000, 262.950000, 297.468000, 262.078000, 313.477000);
        ctx.bezierCurveTo(261.286000, 326.711000, 260.532000, 334.912000, 259.818000, 338.082000);
        ctx.bezierCurveTo(259.105000, 341.172000, 257.638000, 343.551000, 255.420000, 345.215000);
        ctx.bezierCurveTo(253.280000, 346.958000, 250.467000, 347.830000, 246.980000, 347.830000);
        ctx.bezierCurveTo(243.018000, 347.830000, 239.928000, 346.484000, 237.709000, 343.790000);
        ctx.bezierCurveTo(235.490000, 341.095000, 234.381000, 336.853000, 234.381000, 331.068000);
        ctx.bezierCurveTo(234.381000, 325.918000, 235.291000, 319.500000, 237.113000, 311.813000);
        ctx.bezierCurveTo(238.936000, 304.046000, 243.097000, 292.476000, 249.596000, 277.102000);
        ctx.bezierCurveTo(258.234000, 256.497000, 265.723000, 240.290000, 272.062000, 228.482000);
        ctx.lineTo(288.467000, 198.289000);
        ctx.lineTo(224.039000, 198.289000);
        ctx.bezierCurveTo(219.284000, 198.289000, 215.717000, 199.953000, 213.339000, 203.281000);
        ctx.bezierCurveTo(211.042000, 206.610000, 208.269000, 216.556000, 205.019000, 233.119000);
        ctx.lineTo(196.461000, 233.119000);
        ctx.lineTo(205.020000, 176.654000);
        ctx.closePath();
        ctx.stroke();
    }
    
    eightDraw(ctx)
    {
        // 8
        ctx.beginPath();
        ctx.moveTo(249.715000, 176.533000);
        ctx.bezierCurveTo(259.621000, 176.533000, 268.219000, 178.239000, 275.510000, 181.646000);
        ctx.bezierCurveTo(282.880000, 185.054000, 288.466000, 189.690000, 292.270000, 195.555000);
        ctx.bezierCurveTo(296.153000, 201.419000, 298.096000, 207.559000, 298.096000, 213.979000);
        ctx.bezierCurveTo(298.096000, 228.877000, 288.704000, 241.279000, 269.922000, 251.186000);
        ctx.bezierCurveTo(282.602000, 255.782000, 291.754000, 261.805000, 297.381000, 269.254000);
        ctx.bezierCurveTo(303.007000, 276.624000, 305.822000, 285.539000, 305.822000, 296.000000);
        ctx.bezierCurveTo(305.822000, 308.759000, 301.741000, 319.894000, 293.578000, 329.404000);
        ctx.bezierCurveTo(283.038000, 341.688000, 268.020000, 347.828000, 248.525000, 347.828000);
        ctx.bezierCurveTo(231.329000, 347.828000, 217.737000, 343.708000, 207.752000, 335.467000);
        ctx.bezierCurveTo(197.767000, 327.146000, 192.773000, 316.804000, 192.773000, 304.441000);
        ctx.bezierCurveTo(192.773000, 295.169000, 195.626000, 287.086000, 201.332000, 280.191000);
        ctx.bezierCurveTo(207.117000, 273.218000, 217.064000, 267.313000, 231.170000, 262.479000);
        ctx.bezierCurveTo(210.328000, 253.524000, 199.906000, 239.695000, 199.906000, 220.992000);
        ctx.bezierCurveTo(199.906000, 208.867000, 204.582000, 198.446000, 213.934000, 189.729000);
        ctx.bezierCurveTo(223.364000, 180.932000, 235.292000, 176.533000, 249.714000, 176.533000);
        ctx.moveTo(248.881000, 184.736000);
        ctx.bezierCurveTo(238.499000, 184.736000, 230.418000, 187.272000, 224.633000, 192.344000);
        ctx.bezierCurveTo(218.848000, 197.336000, 215.955000, 203.876000, 215.955000, 211.959000);
        ctx.bezierCurveTo(215.955000, 219.963000, 218.451000, 226.341000, 223.443000, 231.096000);
        ctx.bezierCurveTo(228.515000, 235.851000, 240.958000, 241.518000, 260.770000, 248.096000);
        ctx.bezierCurveTo(269.090000, 243.341000, 274.676000, 238.665000, 277.530000, 234.068000);
        ctx.bezierCurveTo(280.382000, 229.393000, 281.809000, 223.290000, 281.809000, 215.762000);
        ctx.bezierCurveTo(281.809000, 205.856000, 278.996000, 198.209000, 273.369000, 192.820000);
        ctx.bezierCurveTo(267.743000, 187.431000, 259.579000, 184.736000, 248.881000, 184.736000);
        ctx.moveTo(240.086000, 265.806000);
        ctx.bezierCurveTo(228.833000, 270.562000, 221.026000, 275.912000, 216.668000, 281.856000);
        ctx.bezierCurveTo(212.309000, 287.799000, 210.128000, 295.089000, 210.128000, 303.726000);
        ctx.bezierCurveTo(210.128000, 314.980000, 213.418000, 323.737000, 219.996000, 329.998000);
        ctx.bezierCurveTo(226.653000, 336.179000, 236.203000, 339.270000, 248.645000, 339.270000);
        ctx.bezierCurveTo(261.800000, 339.270000, 272.022000, 336.180000, 279.312000, 329.998000);
        ctx.bezierCurveTo(286.603000, 323.738000, 290.250000, 315.496000, 290.250000, 305.273000);
        ctx.bezierCurveTo(290.250000, 296.001000, 287.080000, 288.987000, 280.740000, 284.233000);
        ctx.bezierCurveTo(274.480000, 279.478000, 260.928000, 273.335000, 240.086000, 265.807000);
        ctx.closePath();
        ctx.stroke();
    }
    
    nineDraw(ctx)
    {
        // 9
        ctx.beginPath();
        ctx.moveTo(246.623000, 176.533000);
        ctx.bezierCurveTo(263.027000, 176.533000, 276.697000, 183.350000, 287.633000, 196.980000);
        ctx.bezierCurveTo(298.569000, 210.611000, 304.037000, 229.748000, 304.037000, 254.395000);
        ctx.bezierCurveTo(304.037000, 274.840000, 300.987000, 292.116000, 294.885000, 306.223000);
        ctx.bezierCurveTo(288.862000, 320.250000, 280.858000, 330.711000, 270.873000, 337.605000);
        ctx.bezierCurveTo(260.888000, 344.421000, 249.634000, 347.828000, 237.113000, 347.828000);
        ctx.bezierCurveTo(224.988000, 347.828000, 215.479000, 345.175000, 208.584000, 339.865000);
        ctx.bezierCurveTo(201.769000, 334.476000, 198.359000, 328.057000, 198.359000, 320.607000);
        ctx.bezierCurveTo(198.359000, 315.694000, 199.748000, 311.732000, 202.521000, 308.721000);
        ctx.bezierCurveTo(205.374000, 305.709000, 208.939000, 304.203000, 213.219000, 304.203000);
        ctx.bezierCurveTo(217.102000, 304.203000, 220.392000, 305.510000, 223.086000, 308.125000);
        ctx.bezierCurveTo(225.780000, 310.740000, 227.126000, 313.870000, 227.126000, 317.515000);
        ctx.bezierCurveTo(227.126000, 320.131000, 225.898000, 323.023000, 223.441000, 326.193000);
        ctx.bezierCurveTo(221.936000, 328.175000, 221.184000, 329.878000, 221.184000, 331.305000);
        ctx.bezierCurveTo(221.184000, 333.524000, 222.490000, 335.467000, 225.105000, 337.131000);
        ctx.bezierCurveTo(227.721000, 338.716000, 231.922000, 339.508000, 237.707000, 339.508000);
        ctx.bezierCurveTo(245.949000, 339.508000, 253.200000, 337.250000, 259.461000, 332.732000);
        ctx.bezierCurveTo(265.721000, 328.136000, 270.793000, 320.647000, 274.676000, 310.266000);
        ctx.bezierCurveTo(278.559000, 299.805000, 280.500000, 286.293000, 280.500000, 269.730000);
        ctx.lineTo(280.264000, 259.150000);
        ctx.bezierCurveTo(275.112000, 266.917000, 269.090000, 272.782000, 262.195000, 276.744000);
        ctx.bezierCurveTo(255.301000, 280.627000, 247.572000, 282.568000, 239.014000, 282.568000);
        ctx.bezierCurveTo(227.126000, 282.568000, 216.310000, 278.407000, 206.562000, 270.086000);
        ctx.bezierCurveTo(196.894000, 261.765000, 192.061000, 249.522000, 192.061000, 233.356000);
        ctx.bezierCurveTo(192.061000, 217.586000, 197.409000, 204.191000, 208.107000, 193.176000);
        ctx.bezierCurveTo(218.885000, 182.081000, 231.724000, 176.533000, 246.623000, 176.533000);
        ctx.moveTo(246.979000, 185.093000);
        ctx.bezierCurveTo(238.103000, 185.093000, 230.811000, 188.818000, 225.105000, 196.268000);
        ctx.bezierCurveTo(219.400000, 203.638000, 216.547000, 214.771000, 216.547000, 229.670000);
        ctx.bezierCurveTo(216.547000, 243.300000, 219.400000, 253.485000, 225.105000, 260.220000);
        ctx.bezierCurveTo(230.811000, 266.877000, 238.262000, 270.205000, 247.455000, 270.205000);
        ctx.bezierCurveTo(256.569000, 270.205000, 264.215000, 266.600000, 270.396000, 259.389000);
        ctx.bezierCurveTo(276.657000, 252.177000, 279.787000, 242.073000, 279.787000, 229.076000);
        ctx.bezierCurveTo(279.787000, 215.604000, 276.539000, 204.906000, 270.041000, 196.980000);
        ctx.bezierCurveTo(263.621000, 189.056000, 255.934000, 185.094000, 246.979000, 185.094000);
        ctx.closePath();
        ctx.stroke();
    }
    
    tenDraw(ctx)
    {
        // 10
        ctx.beginPath();
        ctx.moveTo(313.785000, 176.535000);
        ctx.bezierCurveTo(329.238000, 176.535000, 342.118000, 182.558000, 352.420000, 194.604000);
        ctx.bezierCurveTo(365.179000, 209.423000, 371.559000, 231.890000, 371.559000, 262.004000);
        ctx.bezierCurveTo(371.559000, 289.978000, 366.011000, 311.296000, 354.916000, 325.957000);
        ctx.bezierCurveTo(343.821000, 340.539000, 330.427000, 347.830000, 314.736000, 347.830000);
        ctx.bezierCurveTo(299.600000, 347.830000, 286.960000, 341.688000, 276.816000, 329.404000);
        ctx.bezierCurveTo(264.136000, 313.951000, 257.796000, 291.642000, 257.796000, 262.479000);
        ctx.bezierCurveTo(257.796000, 234.742000, 263.780000, 212.672000, 275.746000, 196.268000);
        ctx.bezierCurveTo(285.336000, 183.112000, 298.015000, 176.535000, 313.786000, 176.535000);
        ctx.moveTo(187.425000, 179.625000);
        ctx.lineTo(192.893000, 179.625000);
        ctx.lineTo(192.893000, 327.979000);
        ctx.bezierCurveTo(192.893000, 330.197000, 193.685000, 331.901000, 195.270000, 333.089000);
        ctx.bezierCurveTo(197.568000, 334.754000, 200.382000, 335.586000, 203.710000, 335.586000);
        ctx.lineTo(226.771000, 335.586000);
        ctx.lineTo(226.771000, 344.502000);
        ctx.lineTo(141.303000, 344.502000);
        ctx.lineTo(141.303000, 335.586000);
        ctx.lineTo(161.035000, 335.586000);
        ctx.bezierCurveTo(165.156000, 335.586000, 168.206000, 334.634000, 170.188000, 332.732000);
        ctx.bezierCurveTo(172.168000, 330.752000, 173.160000, 328.136000, 173.160000, 324.887000);
        ctx.lineTo(173.160000, 212.790000);
        ctx.bezierCurveTo(173.160000, 210.492000, 172.248000, 208.550000, 170.426000, 206.966000);
        ctx.bezierCurveTo(168.603000, 205.381000, 166.265000, 204.586000, 163.412000, 204.586000);
        ctx.lineTo(137.023000, 204.586000);
        ctx.lineTo(137.023000, 196.386000);
        ctx.bezierCurveTo(149.386000, 194.801000, 159.411000, 192.700000, 167.098000, 190.085000);
        ctx.bezierCurveTo(174.785000, 187.391000, 181.561000, 183.903000, 187.426000, 179.624000);
        ctx.moveTo(314.500000, 185.094000);
        ctx.bezierCurveTo(304.040000, 185.094000, 295.876000, 190.125000, 290.012000, 200.189000);
        ctx.bezierCurveTo(284.147000, 210.175000, 281.215000, 230.938000, 281.215000, 262.479000);
        ctx.bezierCurveTo(281.215000, 293.306000, 284.227000, 313.872000, 290.250000, 324.174000);
        ctx.bezierCurveTo(296.352000, 334.476000, 304.513000, 339.627000, 314.736000, 339.627000);
        ctx.bezierCurveTo(325.039000, 339.627000, 332.964000, 334.873000, 338.512000, 325.363000);
        ctx.bezierCurveTo(345.089000, 314.031000, 348.377000, 293.346000, 348.377000, 263.311000);
        ctx.bezierCurveTo(348.377000, 232.245000, 345.287000, 211.444000, 339.105000, 200.904000);
        ctx.bezierCurveTo(332.925000, 190.364000, 324.723000, 185.094000, 314.500000, 185.094000);
        ctx.closePath();
        ctx.stroke();
    }
    
    aceDraw(ctx)
    {
        // ace
        ctx.beginPath();
        ctx.moveTo(242.820000, 165.004000);
        ctx.lineTo(250.783000, 165.004000);
        ctx.lineTo(313.904000, 325.838000);
        ctx.bezierCurveTo(316.440000, 332.336000, 321.631000, 335.586000, 329.477000, 335.586000);
        ctx.lineTo(334.945000, 335.586000);
        ctx.lineTo(334.945000, 344.502000);
        ctx.lineTo(264.811000, 344.502000);
        ctx.lineTo(264.811000, 335.586000);
        ctx.lineTo(270.398000, 335.586000);
        ctx.bezierCurveTo(277.689000, 335.586000, 282.840000, 334.794000, 285.852000, 333.209000);
        ctx.bezierCurveTo(287.912000, 332.099000, 288.942000, 330.394000, 288.942000, 328.096000);
        ctx.bezierCurveTo(288.942000, 326.749000, 288.664000, 325.322000, 288.109000, 323.816000);
        ctx.lineTo(273.489000, 286.492000);
        ctx.lineTo(204.066000, 286.492000);
        ctx.lineTo(195.866000, 307.889000);
        ctx.bezierCurveTo(193.726000, 313.595000, 192.656000, 318.111000, 192.656000, 321.439000);
        ctx.bezierCurveTo(192.656000, 325.323000, 194.438000, 328.652000, 198.004000, 331.426000);
        ctx.bezierCurveTo(201.649000, 334.200000, 206.920000, 335.586000, 213.814000, 335.586000);
        ctx.lineTo(219.758000, 335.586000);
        ctx.lineTo(219.758000, 344.502000);
        ctx.lineTo(156.043000, 344.502000);
        ctx.lineTo(156.043000, 335.586000);
        ctx.bezierCurveTo(162.858000, 335.586000, 168.247000, 334.120000, 172.209000, 331.187000);
        ctx.bezierCurveTo(176.171000, 328.176000, 179.819000, 322.511000, 183.146000, 314.189000);
        ctx.lineTo(242.820000, 165.004000);
        ctx.moveTo(239.373000, 198.883000);
        ctx.lineTo(207.871000, 277.219000);
        ctx.lineTo(270.041000, 277.219000);
        ctx.lineTo(239.373000, 198.883000);
        ctx.closePath();
        ctx.stroke();
    }
    
    jackDraw(ctx)
    {
        // jack
        ctx.beginPath();
        ctx.moveTo(228.316000, 168.689000);
        ctx.lineTo(306.059000, 168.689000);
        ctx.lineTo(306.059000, 177.604000);
        ctx.lineTo(295.004000, 177.604000);
        ctx.bezierCurveTo(290.645000, 177.604000, 287.515000, 178.397000, 285.614000, 179.982000);
        ctx.bezierCurveTo(283.791000, 181.567000, 282.879000, 183.865000, 282.879000, 186.877000);
        ctx.lineTo(282.879000, 300.875000);
        ctx.bezierCurveTo(282.879000, 309.672000, 280.740000, 317.635000, 276.461000, 324.768000);
        ctx.bezierCurveTo(272.181000, 331.821000, 265.920000, 337.448000, 257.678000, 341.648000);
        ctx.bezierCurveTo(249.436000, 345.769000, 240.126000, 347.830000, 229.744000, 347.830000);
        ctx.bezierCurveTo(215.638000, 347.830000, 204.107000, 343.709000, 195.152000, 335.467000);
        ctx.bezierCurveTo(186.197000, 327.146000, 181.719000, 317.002000, 181.719000, 305.035000);
        ctx.bezierCurveTo(181.719000, 296.159000, 183.977000, 289.067000, 188.494000, 283.758000);
        ctx.bezierCurveTo(193.011000, 278.448000, 198.559000, 275.793000, 205.137000, 275.793000);
        ctx.bezierCurveTo(210.526000, 275.793000, 214.964000, 277.537000, 218.451000, 281.023000);
        ctx.bezierCurveTo(221.938000, 284.431000, 223.681000, 288.790000, 223.681000, 294.100000);
        ctx.bezierCurveTo(223.681000, 298.696000, 222.255000, 302.578000, 219.402000, 305.748000);
        ctx.bezierCurveTo(216.549000, 308.838000, 213.260000, 310.385000, 209.535000, 310.385000);
        ctx.bezierCurveTo(208.109000, 310.385000, 206.128000, 309.988000, 203.592000, 309.195000);
        ctx.bezierCurveTo(201.452000, 308.561000, 200.026000, 308.245000, 199.312000, 308.245000);
        ctx.bezierCurveTo(197.965000, 308.245000, 196.894000, 308.801000, 196.102000, 309.910000);
        ctx.bezierCurveTo(195.230000, 311.020000, 194.795000, 312.683000, 194.795000, 314.902000);
        ctx.bezierCurveTo(194.795000, 320.846000, 197.767000, 326.274000, 203.711000, 331.188000);
        ctx.bezierCurveTo(209.734000, 336.022000, 217.103000, 338.439000, 225.821000, 338.439000);
        ctx.bezierCurveTo(235.726000, 338.439000, 243.532000, 335.030000, 249.238000, 328.215000);
        ctx.bezierCurveTo(254.944000, 321.320000, 257.797000, 311.733000, 257.797000, 299.449000);
        ctx.lineTo(257.797000, 186.877000);
        ctx.bezierCurveTo(257.797000, 183.787000, 256.727000, 181.488000, 254.587000, 179.982000);
        ctx.bezierCurveTo(252.527000, 178.397000, 248.961000, 177.604000, 243.889000, 177.604000);
        ctx.lineTo(228.316000, 177.604000);
        ctx.lineTo(228.316000, 168.689000);
        ctx.closePath();
        ctx.stroke();
    }
    
    queenDraw(ctx)
    {
        // queen
        ctx.beginPath();
        ctx.moveTo(245.910000, 165.004000);
        ctx.bezierCurveTo(260.888000, 165.004000, 274.560000, 168.808000, 286.922000, 176.416000);
        ctx.bezierCurveTo(299.285000, 183.945000, 309.189000, 194.803000, 316.639000, 208.988000);
        ctx.bezierCurveTo(324.089000, 223.094000, 327.814000, 238.904000, 327.814000, 256.418000);
        ctx.bezierCurveTo(327.814000, 272.426000, 324.882000, 286.690000, 319.018000, 299.211000);
        ctx.bezierCurveTo(313.232000, 311.732000, 304.118000, 323.183000, 291.676000, 333.564000);
        ctx.bezierCurveTo(292.944000, 336.814000, 294.332000, 341.252000, 295.838000, 346.879000);
        ctx.bezierCurveTo(298.612000, 357.419000, 301.265000, 364.273000, 303.801000, 367.443000);
        ctx.bezierCurveTo(306.337000, 370.613000, 309.229000, 372.199000, 312.479000, 372.199000);
        ctx.bezierCurveTo(315.489000, 372.199000, 318.065000, 370.496000, 320.205000, 367.088000);
        ctx.bezierCurveTo(322.425000, 363.759000, 323.613000, 358.172000, 323.771000, 350.326000);
        ctx.lineTo(330.904000, 350.326000);
        ctx.bezierCurveTo(330.825000, 364.591000, 328.052000, 375.092000, 322.584000, 381.828000);
        ctx.bezierCurveTo(317.116000, 388.564000, 309.982000, 391.932000, 301.186000, 391.932000);
        ctx.bezierCurveTo(293.023000, 391.932000, 286.366000, 388.642000, 281.215000, 382.064000);
        ctx.bezierCurveTo(276.143000, 375.566000, 272.775000, 363.046000, 271.111000, 344.502000);
        ctx.bezierCurveTo(266.673000, 345.612000, 262.394000, 346.443000, 258.273000, 346.998000);
        ctx.bezierCurveTo(254.153000, 347.553000, 250.231000, 347.830000, 246.506000, 347.830000);
        ctx.bezierCurveTo(231.766000, 347.830000, 218.134000, 344.026000, 205.613000, 336.418000);
        ctx.bezierCurveTo(193.171000, 328.731000, 183.265000, 317.755000, 175.895000, 303.490000);
        ctx.bezierCurveTo(168.604000, 289.146000, 164.959000, 272.980000, 164.959000, 254.990000);
        ctx.bezierCurveTo(164.959000, 229.472000, 173.239000, 207.680000, 189.803000, 189.611000);
        ctx.bezierCurveTo(204.860000, 173.207000, 223.563000, 165.004000, 245.910000, 165.004000);
        ctx.moveTo(246.268000, 174.039000);
        ctx.bezierCurveTo(236.441000, 174.039000, 227.605000, 176.812000, 219.760000, 182.359000);
        ctx.bezierCurveTo(211.993000, 187.907000, 205.890000, 196.585000, 201.453000, 208.393000);
        ctx.bezierCurveTo(197.094000, 220.121000, 194.914000, 236.091000, 194.914000, 256.299000);
        ctx.bezierCurveTo(194.914000, 270.563000, 196.223000, 282.806000, 198.838000, 293.029000);
        ctx.bezierCurveTo(201.453000, 303.252000, 205.535000, 312.962000, 211.082000, 322.154000);
        ctx.bezierCurveTo(210.924000, 318.509000, 210.844000, 315.576000, 210.844000, 313.357000);
        ctx.bezierCurveTo(210.844000, 303.531000, 213.974000, 295.447000, 220.234000, 289.107000);
        ctx.bezierCurveTo(226.574000, 282.767000, 234.855000, 279.597000, 245.078000, 279.597000);
        ctx.bezierCurveTo(255.380000, 279.597000, 264.018000, 283.045000, 270.992000, 289.939000);
        ctx.bezierCurveTo(276.222000, 295.169000, 281.136000, 304.243000, 285.732000, 317.160000);
        ctx.bezierCurveTo(290.012000, 309.077000, 293.142000, 300.321000, 295.123000, 290.890000);
        ctx.bezierCurveTo(297.104000, 281.460000, 298.096000, 269.652000, 298.096000, 255.467000);
        ctx.bezierCurveTo(298.096000, 235.497000, 295.917000, 219.724000, 291.559000, 208.154000);
        ctx.bezierCurveTo(287.200000, 196.504000, 281.058000, 187.907000, 273.133000, 182.359000);
        ctx.bezierCurveTo(265.208000, 176.812000, 256.253000, 174.039000, 246.268000, 174.039000);
        ctx.moveTo(244.723000, 288.869000);
        ctx.bezierCurveTo(237.273000, 288.869000, 231.171000, 291.247000, 226.416000, 296.002000);
        ctx.bezierCurveTo(221.661000, 300.757000, 219.283000, 306.899000, 219.283000, 314.428000);
        ctx.bezierCurveTo(219.283000, 321.878000, 222.216000, 328.929000, 228.080000, 335.586000);
        ctx.bezierCurveTo(233.707000, 338.043000, 239.610000, 339.271000, 245.791000, 339.271000);
        ctx.bezierCurveTo(250.546000, 339.271000, 255.024000, 338.677000, 259.225000, 337.488000);
        ctx.bezierCurveTo(263.410771, 336.305434, 267.411266, 334.545162, 271.111000, 332.258000);
        ctx.bezierCurveTo(270.953000, 317.993000, 269.091000, 307.652000, 265.525000, 301.232000);
        ctx.bezierCurveTo(261.008000, 292.991000, 254.074000, 288.869000, 244.723000, 288.869000);
        ctx.closePath();
        ctx.stroke();
    }
    
    kingDraw(ctx)
    {
        // king
        ctx.beginPath();
        ctx.moveTo(161.035000, 168.689000);
        ctx.lineTo(241.393000, 168.689000);
        ctx.lineTo(241.393000, 177.605000);
        ctx.lineTo(224.275000, 177.605000);
        ctx.bezierCurveTo(220.630000, 177.605000, 217.817000, 178.555000, 215.835000, 180.457000);
        ctx.bezierCurveTo(213.855000, 182.359000, 212.863000, 184.777000, 212.863000, 187.709000);
        ctx.lineTo(212.863000, 269.373000);
        ctx.lineTo(279.076000, 198.645000);
        ctx.bezierCurveTo(282.880000, 194.524000, 284.781000, 190.641000, 284.781000, 186.996000);
        ctx.bezierCurveTo(284.781000, 184.222000, 283.473000, 181.964000, 280.857000, 180.221000);
        ctx.bezierCurveTo(278.242000, 178.477000, 273.963000, 177.605000, 268.020000, 177.605000);
        ctx.lineTo(263.146000, 177.605000);
        ctx.lineTo(263.146000, 168.689000);
        ctx.lineTo(335.301000, 168.689000);
        ctx.lineTo(335.301000, 177.605000);
        ctx.lineTo(329.715000, 177.605000);
        ctx.bezierCurveTo(324.881000, 177.605000, 319.570000, 179.032000, 313.785000, 181.885000);
        ctx.bezierCurveTo(308.000000, 184.738000, 302.652000, 188.700000, 297.738000, 193.771000);
        ctx.lineTo(256.965000, 236.209000);
        ctx.lineTo(315.332000, 322.271000);
        ctx.bezierCurveTo(318.582000, 327.106000, 321.949000, 330.553000, 325.436000, 332.613000);
        ctx.bezierCurveTo(328.922000, 334.594000, 333.044000, 335.586000, 337.799000, 335.586000);
        ctx.lineTo(344.217000, 335.586000);
        ctx.lineTo(344.217000, 344.500000);
        ctx.lineTo(264.930000, 344.500000);
        ctx.lineTo(264.930000, 335.586000);
        ctx.lineTo(273.963000, 335.586000);
        ctx.bezierCurveTo(280.540000, 335.586000, 284.899000, 335.031000, 287.039000, 333.922000);
        ctx.bezierCurveTo(289.258000, 332.812000, 290.367000, 331.426000, 290.367000, 329.762000);
        ctx.bezierCurveTo(290.367000, 328.256000, 289.892000, 326.750000, 288.941000, 325.244000);
        ctx.lineTo(240.441000, 253.920000);
        ctx.lineTo(212.863000, 283.520000);
        ctx.lineTo(212.863000, 326.790000);
        ctx.bezierCurveTo(212.863000, 329.483000, 213.655000, 331.464000, 215.240000, 332.732000);
        ctx.bezierCurveTo(217.776000, 334.634000, 220.789000, 335.586000, 224.275000, 335.586000);
        ctx.lineTo(241.393000, 335.586000);
        ctx.lineTo(241.393000, 344.500000);
        ctx.lineTo(161.035000, 344.500000);
        ctx.lineTo(161.035000, 335.586000);
        ctx.lineTo(176.488000, 335.586000);
        ctx.bezierCurveTo(180.451000, 335.586000, 183.383000, 334.794000, 185.285000, 333.209000);
        ctx.bezierCurveTo(187.187000, 331.545000, 188.139000, 329.404000, 188.139000, 326.789000);
        ctx.lineTo(188.139000, 186.400000);
        ctx.bezierCurveTo(188.139000, 183.627000, 187.067000, 181.488000, 184.928000, 179.982000);
        ctx.bezierCurveTo(182.788000, 178.397000, 179.183000, 177.605000, 174.111000, 177.605000);
        ctx.lineTo(161.035000, 177.605000);
        ctx.lineTo(161.035000, 168.689000);
        ctx.closePath();
        ctx.stroke();
    }
    
}





function main() {
    
    var mainBody = document.getElementById("mainbody");
    
    var canvas = document.createElement("canvas");
    mainBody.appendChild(canvas);
    canvas.width = "1136";
    canvas.height = "605";
    
    var ctx = canvas.getContext("2d");
    
    
    /* This was for the outer dimensions of the image, but this is no longer needed
    var outer = [
        {
            x: 0.0,
            y: 0.0
        },
        {
            x: 512.0,
            y: 512.0
        }
    ];
    
    for ( var i = 0; i < outer.length; i++ )
    {
        outer[i]["x"] += 10;
        outer[i]["y"] += 10;
    }
    
    // Outer border dimensions
    ctx.beginPath();
    ctx.moveTo(outer[0]["x"],outer[0]["y"]);
    ctx.lineTo(outer[1]["x"],outer[0]["y"]);
    ctx.lineTo(outer[1]["x"],outer[1]["y"]);
    ctx.lineTo(outer[0]["x"],outer[1]["y"]);
    ctx.lineTo(outer[0]["x"],outer[0]["y"]);
    ctx.stroke();
    */
    
    //var cardDraw = new CardDrawModel();
    //cardDraw.outerCardPerimeter(ctx,10, 10,0.50);
    
    var joker = new CardModel("red","joker");
    
    joker.draw(ctx,10,10,440,340);
    
    
    
    
    
}



